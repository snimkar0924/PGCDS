{
    "contents" : "##### this version attempts to optimize the code in any manner possible...\n\n#clear the workspace of any residual data\nrm(list=ls())\nboxOfficeData<-read.csv(\"./data/boxOfficeData_2014.csv\", header=TRUE, sep=\",\")\nattach(boxOfficeData)\ncols<-colnames(boxOfficeData)\n\n#read in the list of representative columns - these cols are a subset of the \n## set of explanatory variables (42 total) - these 18 variables have been  \n## chosen as most relevant for the Lifetime earnings..  \nsampleSet<-as.vector(read.csv(\"./data/sample set.csv\",header=TRUE,sep=\",\"))\nsampleModels<-matrix(ncol=2,data=rep(0))\ncolnames(sampleModels)<-c(\"R-squared\",\"model\")\n\n#############using combinations of the 18 variables to arrive at the \"best\" model\n## based on the respective R-squared values of the generated models.\ni<-1\nj<-1\nk<-1\ntotalParams<-nrow(sampleSet)\nnumCombs<-0\ncou<-0\nmodCou<-0\nfor (i in 1:totalParams)\n{\n  combi <- combn(totalParams,i)\n  numCombs<-ncol(combi)\n  for (l in 1:numCombs)\n  {\n    sampleModels<-rbind(sampleModels,c(rep(0)))\n  }\n  for (j in 1:numCombs)\n  {\n    modCou<-modCou+1\n    #here, each column of combi is a set of expl vars for the model\n    # the number of vars being the num of rows of combi... \n    str1<-\"\"\n    for (k in 1:nrow(combi))\n    {\n      cou<-cou+1\n      str1<-paste(str1,sampleSet[combi[k,j],],sep=\"+\")\n      otpt<-paste(\"cou=\",cou,\"i=\",i,\"j=\",j,\"k=\",k,\"data=\",str1,sep=\" \")\n      print(otpt)\n    }#k\n    fmla<-as.formula(paste(\"Lifetime~\",str1,\"-1\"))\n    sampleModel<-lm(fmla)\n    sampleSummary<-summary(sampleModel)\n    sampleModels[modCou,1]<-sampleSummary$r.squared\n    sampleModels[modCou,2]<-toString(sampleSummary$terms)\n  }#j\n}#i\nwrite.table(sampleModels,file=\"./data/residuals.csv\",append=TRUE,row.names = FALSE,sep=\",\",qmethod=\"double\")\n\ndim(sampleModels)\n#[1] 262144      2\nindexBstMod<-which.max(sampleModels[,1])\n#[1] 262143\nbestModel<-sampleModels[indexBstMod,2]\n\n######moving thro' combinations complete - the following code uses the recommended \n## models and related deviants to arrive at the most useful model for \n## ROI determination and earning prediction\n#manually inspect the \"bestModel\" variable and construct required formula string\nbstModFrmla<-\"Lifetime ~ +mvs + holiday1 + Genre1 + sequel + larm1 + larf1 + dirr1 + tv_weeks + tv_spots + tv_channels + tv_grps + tv_spend + yt_trailerlikes + yt_moviesonglikes + fb_pagelikes + fb_pageposts + tw_faves + search_mvkywd - 1\"\nbestModel<-lm(bstModFrmla)\nsummary(bestModel)\n\ngoodModFrmla<-\"Lifetime ~ larm1 + larf1 + dirr1 + tv_channels + tw_faves + search_mvkywd - 1\"\ngoodModel<-lm(goodModFrmla)\nsummary(goodModel)\n\nanoGoodModFrmla<-\"Lifetime ~ +mvs + holiday1 + Genre1 + sequel + larm1 + larf1 + dirr1 + tv_weeks + tv_spots + tv_channels + tv_grps + tv_spend + yt_trailerlikes + yt_moviesonglikes + fb_pagelikes + fb_pageposts + tw_faves + search_mvkywd - 1\"\nanoGoodModel<-lm(anoGoodModFrmla)\nsummary(anoGoodModel)\n\nyetAnoGoodModel<-lm(Lifetime~larm1+search_mvkywd-1)\nsummary(yetAnoGoodModel)\n\n\n##conclusion - use \"good model\"\n#summary(goodModel)\n\n####### supplementary models \n##determine what drives search_mvkywd - since search is of significant importance\n## in predicting/ influencing Lifetime earnings - attempting to understand what\n## \"actionable\" variables are driving search itself..\nsupMod<-lm(search_mvkywd~tw_follws+rad6_comm+rad6_news+rad6_blgs+rad6_vds+rad6_twsentiP+rad6_twsentiN-1)\nsummary(supMod)\nanoSupMod<-lm(search_mvkywd~yt_trailerviews+fb_pagelikes+tw_follws+tw_faves+fg+fb_pageposts-1)\nsummary(anoSupMod)\n\n\n\n##model for prediction - due to lack of data for search mv keyword\n\ncoefs<-coef(anoSupMod)\nsearchVol<-coefs[1]*yt_trailerviews+coefs[2]*fb_pagelikes+coefs[3]*tw_follws+coefs[4]*tw_faves+coefs[5]*fg+coefs[6]*fb_pageposts\n\ncoefs<-coef(goodModel)\nlifetimeEarnings<-coefs[1]*larm1+coefs[2]*larf1+coefs[3]*dirr1+coefs[4]*tv_channels+coefs[5]*tw_faves+coefs[6]*searchVol\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1450252551497.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2798667174",
    "id" : "952CB7D8",
    "lastKnownWriteTime" : 1450259810,
    "path" : "D:/SONALI - DATA/00000 La Vita Nuova/NISM/PGCDS/TERM 1/003 Applied Econometrics/ASSIGNMENT 1 - go bollywood/assignment 1 - movie earning prediction/Movie Earning Prediction/movieEarningPredictionv2.1.R",
    "project_path" : "movieEarningPredictionv2.1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}